
<template>
  <view class="book-sorts">
    <view class="weui-cells__title">
      {{library.name}}分类列表
      <button class="weui-btn mini-btn" @tap="add({{library.id}})" type="primary" size="mini" style="float:right">添加分类</button>
    </view>
    <view class="weui-cells__title"></view>
    <view class="weui-cells weui-cells_after-title">
      <block wx:for="{{sorts}}" wx:key="index">
        <navigator url="/pages/library/sort?id={{item.id}}" class="weui-cell weui-cell_access" hover-class="weui-cell_active">
          <view class="weui-cell__bd">{{item.name}}</view>
          <view class="weui-cell__ft weui-cell__ft_in-access">{{item.intro}}</view>
        </navigator>
      </block>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import { service } from '../../config.js'
  import http from '../../mixins/http'
  import base from '../../mixins/base'
  import user from '../../mixins/user'

  export default class bookSort extends wepy.page {
    mixins = [base, http, user]
    config = {
      navigationBarTitleText: '图书分类',
      enablePullDownRefresh: false
    }
    data = {
      loading: false,

      // 图书分类
      sorts: [],
      library_id: 0,
      library: {}
    }

    computed = {
    }

    onLoad(options) {
      this.library_id = options && +options.library_id
    }

    onShow(options) {
      // 初始化页面数据
      this.initPageData()
    }

    onPullDownRefresh() {
      this.initPageData()
    }

    // 初始化页面数据
    initPageData() {
      // 获取分类列表
      this.$get({url: service.libraries + '/' + this.library_id + '/sorts'}, {
        success: ({code, data}) => {
          this.sorts = data.sorts
          this.library = data.library
        },
        fail: ({code, data}) => {
          // 失败了什么也不做
        },
        complete: () => {
          this.loading = false
        }
      })
    }

    methods = {
      add(libraryId) {
        wx.navigateTo({url: '/pages/library/sort?library_id=' + libraryId})
      },

      save() {
        // 防抖
        if (this.loading) return
        if (!this.getString(this.title)) {
          return this.$alert('温馨提示', '请输入图书标题')
        }
        if (!this.getString(this.author)) {
          return this.$alert('温馨提示', '请输入作者')
        }
        if (!this.getString(this.num)) {
          return this.$alert('温馨提示', '请设置馆藏册数')
        }

        const data = {
          title: this.getString(this.title),
          origin_title: this.getString(this.origin_title),
          class_id: this.getString(this.class_id),
          author: this.getString(this.author),
          translator: this.getString(this.translator),
          summary: this.getString(this.summary),
          publisher: this.getString(this.publisher),
          price: this.getString(this.price),
          image: this.getString(this.image),
          pubdate: this.getString(this.pubdate),
          pages: this.getString(this.pages),
          num: this.getString(this.num)
        }
        // 开防抖
        this.loading = true

        // 保存图书信息
        this.$put({url: service.books + '/' + this.id, data: data}, {
          success: ({code, data}) => {
            wx.showModal({
              title: '提示',
              content: '保存成功, 继续录入',
              success: function(res) {
                if (res.confirm) {
                  wx.switchTab({url: '/pages/library'})
                } else if (res.cancel) {
                }
              }
            })
          },
          fail: ({code, data}) => {
            // 失败了什么也不做
          },
          complete: () => {
            this.loading = false
          }
        })
      },
      destroy() {
        var self = this
        wx.showModal({
          title: '提示',
          content: '确认删除该图书信息？',
          success: function(res) {
            if (res.confirm) {
              self.$delete({url: service.books + '/' + self.id}, {
                success: ({code, data}) => {
                  // setTimeout(() => {
                  wx.showToast({
                    title: '删除成功',
                    icon: 'success',
                    duration: 2000
                  })
                  // }, 2000)
                  wx.navigateBack({
                    delta: 2
                  })
                },
                fail: ({code, data}) => {
                  // 失败了什么也不做
                },
                complete: () => {
                  self.loading = false
                }
              })
            } else if (res.cancel) {
            }
          }
        })
      },
      typing (type, e) {
        if (this.isDefined(this[type])) {
          this[type] = e.detail.value
        }
      }
    }
  }
</script>

<style lang="less">
@import "../../styles/custom/fn.less";


</style>
