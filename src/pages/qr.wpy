<template>
  <view class="qr">
    <view class="qr_isbn">
      <input type="number" placeholder="请输入ISBN" bindblur="ReferBook"/>
      <!--<button type="primary" size="mini">识别</button>-->
    </view>
    <view wx:if="{{Show}}" class="{{ShowAnimation ? 'BookList_animation' : ''}}" style="margin-top: -50rpx">
      <button class=" flo_r" type="primary" size="mini" @tap="addcollect()" style="margin-right: 20rpx">一键收藏</button>
      <view class="clearfloat"></view>
    </view>
    <view wx:if="{{Show}}" wx:for="{{libraries}}" wx:key="*this" class="BookList {{ShowAnimation ? 'BookList_animation' : ''}}">
      <view class="flo_l">
        <image src="{{item.image}}" mode="aspectFit" />
      </view>
      <view class="flo_l" style="width: 65%"  >
        <view class="font_28 ellipsis_1">{{item.title}}</view>
        <view class="font_26 ellipsis_3" >简介：{{item.summary}}</view>
        <text class="font_26">作者：{{item.author}}</text>
        <button class=" flo_r" type="warn" size="mini" @tap="deletecollect({{item.id}})" style="margin-top: 22rpx">删除</button>
      </view>
      <view class="clearfloat"></view>
    </view>
    <view class="BookList {{ShowAnimation ? 'BookList_animation' : ''}}" wx:if="{{ShowEdit}}">
      <view class="flo_l" wx:if="{{ShowUpload}}" style="margin-top: 32rpx">
        <image src="{{BookImage}}" mode="aspectFit" bindtap="chooseimage"/>
      </view>
      <view class="flo_l hide_image" wx:else bindtap="chooseimage">
        <image src="../images/icon/icon-upload.png" mode="aspectFit" />
        <text class="font_26">上传封面</text>
      </view>
      <view class="flo_l" style="width: 65%">
        <view class="font_28" style="margin-top: 20rpx"><view>作者： </view><input type="text" placeholder="请填写作者"  class="upload-text" style="width: 95%;padding-left: 12rpx" bindinput="inputChange_author"/></view>
        <view class="font_28"><view>书名： </view><input type="text" placeholder="请填写书的名字"  class="upload-text" style="width: 95%;padding-left: 12rpx" bindinput="inputChange"/></view>
        <view class="font_26 ellipsis_3" >简介： <textarea type="text" auto-height  placeholder="请填写书的简介" class="upload-text" style="min-height: 180rpx;padding: 12rpx;" bindinput="textareaChange"/></view>
      </view>
      <view class=" flo_r">
        <button  type="primary" size="mini" @tap="addbook()" style="margin:30rpx">录入收藏</button>
      </view>
      <view class="clearfloat"></view>
    </view>
    <view class="qr_btn">
      <view class="qr_btn_animation"  @tap="scanBook()">扫一扫</view>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import http from '../mixins/http'
  import base from '../mixins/base'
  import user from '../mixins/user'
  import { service } from '../config.js'

  export default class pageQr extends wepy.page {
    mixins = [base, http, user]
    config = {
      navigationBarTitleText: '扫码',
      enablePullDownRefresh: false
    }
    data = {
      libraries: [],
      Show: false,
      ShowEdit: false,
      ShowAnimation: false,
      BookId: [],
      ShowUpload: false,
      files: '',
      BookImage: '../images/icon/icon-error.png',
      EditImage: '',
      EditTitle: '',
      EditIsbn: '',
      EditSummary: '',
      EditAuthor: ''
    }
    onShow() {
      this.$parent.getTracker(this.$root.$name, this.config.navigationBarTitleText)
    }

    onPullDownRefresh() {
      wx.startPullDownRefresh()
    }
    uploadFiles(filePaths, successUp, failUp, i, length) {
      let that = this
      let token = wx.getStorageSync('token')
      wx.uploadFile({
        url: service.books_upload,
        filePath: filePaths,
        method: 'POST',
        name: 'fileData',
        header: {
          'Authorization': 'Bearer ' + token,
          'content-type': 'multipart/form-data',
          'X-Requested-With': 'XMLHttpRequest'
        },
        success: (resp) => {
          that.EditImage = JSON.parse(resp.data).data
        },
        fail: (res) => {
          failUp++
        },
        complete: () => {
          i++
          if (i === length) {
          } else {
            that.uploadFiles(filePaths, successUp, failUp, i, length)
          }
        }
      })
    }
    methods = {
      scanBorrow(_id) {
        wx.navigateTo({url: '/pages/library/book?id=' + _id})
      },
      ReferBook(e) {
        let code = e.detail.value
        let that = this
        if (code == '') {
          wx.showToast({
            title: '请输入ISBN码',
            image: '../images/icon/icon-error.png',
            duration: 1500
          })
        } else {
          this.$post({
            url: service.books,
            data: {
              'isbn': code
            }
          }, {
            success: ({code, data}) => {
              if (data.title) {
                that.ShowAnimation = false
                that.Show = true
                that.libraries = data
                that.BookId.push(data.id)
              } else {
                wx.showToast({
                  title: '未能识别此书...',
                  image: '../images/icon/icon-error.png',
                  duration: 1500
                })
              }
            },
            fail: (res) => {
              wx.showToast({
                title: '未能识别ISBN码',
                image: '../images/icon/icon-error.png',
                duration: 1500
              })
            },
            complete: () => { this.loaded = false }
          })
        }
      },
      chooseimage() {
        var that = this
        wx.chooseImage({
          sizeType: ['original', 'compressed'], // 可以指定是原图还是压缩图，默认二者都有
          sourceType: ['album', 'camera'], // 可以指定来源是相册还是相机，默认二者都有
          success: function (res) {
            // 返回选定照片的本地文件路径列表，tempFilePath可以作为img标签的src属性显示图片
            that.files = res.tempFilePaths
            console.log(res.tempFilePaths)
            that.ShowUpload = true
            that.BookImage = res.tempFilePaths[0]
            that.$apply()
            that.uploadFiles(that.BookImage, 0, 0, 0, that.files.length)
          }
        })
      },
      addcollect() {
//        console.log(this.libraries)
        let that = this
        this.ShowAnimation = true
        this.$post({
          url: service.books_collect,
          data: {
            'ids': that.BookId
          }
        }, {
          success: ({code, data}) => {
            setTimeout(() => {
              wx.showToast({
                title: '已加入收藏',
                icon: 'none',
                duration: 1500
              })
              that.libraries = []
            }, 800)
          },
          fail: (res) => {},
          complete: () => { this.loaded = false }
        })
      },
      deletecollect(_id) {
        console.log(this.BookId)
        console.log(this.libraries)
        for (let i = 0; i < this.libraries.length; i++) {
          if (_id === this.libraries[i].id) {
            console.log(i)
            this.libraries.splice(i, 1)
            this.libraries.length == 0 ? this.Show = false : ''
          }
        }
        for (let j = 0; j < this.BookId.length; j++) {
          if (_id === this.BookId[j]) {
            console.log(j)
            this.BookId.splice(j, 1)
          }
        }
        console.log(this.BookId)
      },
      inputChange(e) {
        this.EditTitle = e.detail.value
      },
      inputChange_author(e) {
        this.EditAuthor = e.detail.value
      },
      textareaChange(e) {
        this.EditSummary = e.detail.value
      },
      addbook() {
        let that = this
        console.log(this.EditImage)
        console.log(this.EditAuthor)
        console.log(this.EditTitle)
        console.log(this.EditSummary)
        console.log(this.EditIsbn)
        if (!that.EditImage) {
          wx.showToast({
            title: '请先上传图片',
            image: '../images/icon/icon-error.png',
            duration: 1500
          })
        } else if (!that.EditTitle) {
          wx.showToast({
            title: '请填写书的名字',
            image: '../images/icon/icon-error.png',
            duration: 1500
          })
        } else if (!that.EditSummary) {
          wx.showToast({
            title: '请填写书的简介',
            image: '../images/icon/icon-error.png',
            duration: 1500
          })
        } else {
          this.$post({
            url: service.books,
            data: {
              'image': that.EditImage,
              'title': that.EditTitle,
              'summary': that.EditSummary,
              'isbn': that.EditIsbn
            }
          }, {
            success: ({code, data}) => {
              that.ShowAnimation = true
              setTimeout(() => {
                that.ShowEdit = false
              }, 800)
            },
            fail: ({code, data}) => {
            },
            complete: () => { this.loaded = false }
          })
        }
      },
      scanBook() {
        let that = this
        that.ShowAnimation = false
        wx.scanCode({
          success: (res) => {
            if (res.result) {
              that.EditIsbn = res.result
              this.$post({
                url: service.books,
                data: {
//                  'isbn': 1234645
                  'isbn': that.EditIsbn
                }
              }, {
                success: ({code, data}) => {
                  if (code == 0 && data.image) {
//                    that.ShowAnimation = false
                    that.Show = true
                    that.ShowEdit = false
                    that.libraries.unshift(data)
                    that.BookId.push(data.id)
                  }
                },
                fail: ({code, data}) => {
                  wx.showToast({
                    title: '未能识别出',
                    image: '../images/icon/icon-error.png',
                    duration: 1500
                  })
//                  console.log(code,'dslajdkajl')
                  if (code === 1) {
                    that.ShowEdit = true
                  }
                },
                complete: () => { this.loaded = false }
              })
            }
          },
          fail: (res) => {
//            wx.showToast({
//              title: '未能识别出',
//              image: '../images/icon/icon-error.png',
//              duration: 1500
//            })
          }
        })
      }
    }
  }
</script>

<style lang="less">
  .qr_isbn input {
    background: white;
    width: 80%;
    height: 62rpx;
    text-align: center;
    border: 2rpx solid #d3d3d3;
    border-radius: 8rpx;
    margin: 10% auto;
  }
  .upload-text{
    width: 92%;
    /*background: white;*/
    border: 1rpx solid #c2c2c2;
    border-radius: 6rpx;
  }
  .BookList {
    background: white;
    box-shadow: 1rpx 12rpx 12rpx #d3d3d3;
    padding: 6rpx 0;
    overflow: hidden;
    margin: 12rpx;
  }
  .BookList_animation {
    position: absolute;
    left: 0; bottom: 650rpx;
    animation: mybook 1000ms 1;
    animation-fill-mode: forwards;
  }
  @keyframes mybook {
    from {
      bottom: 650rpx;
      width: 100%;
      height: 100%;
      left: 0;
    }
    to {
      bottom: -25rpx;
      width: 0;
      height: 0%;
      left: 200rpx;
    }
  }
  image {
    width: 240rpx;
    height: 240rpx;
  }
  .inline-block {display: inline-block}
  .flo_l {float: left}
  .flo_r {float: right}
  .font_26 {font-size: 26rpx}
  .font_28 {font-size: 28rpx}
  .clearfloat {clear:both}
  .white {background: white}
  .ellipsis_3 {
    overflow: hidden;
    text-overflow: ellipsis;
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
  }
  .ellipsis_1 {
    overflow: hidden;
    text-overflow: ellipsis;
    display: -webkit-box;
    -webkit-line-clamp: 1;
    -webkit-box-orient: vertical;
  }
  .qr_btn_animation{
    width: 180rpx;
    height: 180rpx;
    border-radius: 50%;
    background: #4ba7ff;
    text-align: center;
    line-height: 180rpx;
    color: white;
    margin: 5% auto;
    animation: mymove 1500ms infinite;
    animation-direction:alternate;
    position: fixed;
    left: 280rpx;
    bottom: -100rpx;
  }
  .hide_image{
    width: 200rpx;
    height: 280rpx;
    margin: 20rpx;
    border: 2rpx solid #d3d3d3;
    text-align: center;
  }
  .hide_image image{
    width: 100rpx;
    height: 100rpx;
    margin-top: 100rpx;
  }
  @keyframes mymove {
    from {
      /*width:180rpx; height: 180rpx;*/
      /*line-height: 180rpx;*/
      bottom: -50rpx;
    }
    to {
      /*width:200rpx;height: 200rpx;*/
      /*line-height: 200rpx;*/
      bottom: 0rpx;
    }
  }
</style>
